!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CGMMeas	.\cgm.c	/^static attHandleValueNoti_t  CGMMeas;$/;"	v	file:
CGMMeasSend	.\cgm.c	/^static void CGMMeasSend(void)$/;"	f	file:
CGM_CALIBRATION_NIR	.\CGM_Service_values.h	218;"	d
CGM_CALIBRATION_PENDING	.\CGM_Service_values.h	219;"	d
CGM_CALIBRATION_REJECT	.\CGM_Service_values.h	217;"	d
CGM_FEATURE_ALERTS_DEVICE_SPEC	.\CGM_Service_values.h	54;"	d
CGM_FEATURE_ALERTS_HIGH_LOW	.\CGM_Service_values.h	50;"	d
CGM_FEATURE_ALERTS_HYPER	.\CGM_Service_values.h	52;"	d
CGM_FEATURE_ALERTS_HYPO	.\CGM_Service_values.h	51;"	d
CGM_FEATURE_ALERTS_INC_DEC	.\CGM_Service_values.h	53;"	d
CGM_FEATURE_CAL	.\CGM_Service_values.h	49;"	d
CGM_FEATURE_DETECTION_BAT_LOW	.\CGM_Service_values.h	58;"	d
CGM_FEATURE_DETECTION_RESULT_HIGH_LOW	.\CGM_Service_values.h	57;"	d
CGM_FEATURE_DETECTION_SENSOR_MALFUNC	.\CGM_Service_values.h	55;"	d
CGM_FEATURE_DETECTION_SENSOR_TYPE_ERR	.\CGM_Service_values.h	59;"	d
CGM_FEATURE_DETECTION_TEMP_HIGH_LOW	.\CGM_Service_values.h	56;"	d
CGM_FEATURE_E2E_CRC	.\CGM_Service_values.h	61;"	d
CGM_FEATURE_FAULT_GENERAL_DEVICE	.\CGM_Service_values.h	60;"	d
CGM_FEATURE_MULTI_BOND	.\CGM_Service_values.h	62;"	d
CGM_FEATURE_MULTI_SES	.\CGM_Service_values.h	63;"	d
CGM_FEATURE_QUALITY	.\CGM_Service_values.h	65;"	d
CGM_FEATURE_TREND_INFO	.\CGM_Service_values.h	64;"	d
CGM_FEATURE_UUID	.\CGM_Service_values.h	11;"	d
CGM_Init	.\cgm.c	/^void CGM_Init( uint8 task_id )$/;"	f
CGM_MEAS_DB_SIZE	.\cgm.c	136;"	d	file:
CGM_MEAS_DB_SIZE	.\cgm.h	56;"	d
CGM_MEAS_UUID	.\CGM_Service_values.h	10;"	d
CGM_ProcessEvent	.\cgm.c	/^uint16 CGM_ProcessEvent( uint8 task_id, uint16 events )$/;"	f
CGM_QUALITY_PRES	.\CGM_Service_values.h	20;"	d
CGM_SAMPLE_LOC_AST	.\CGM_Service_values.h	82;"	d
CGM_SAMPLE_LOC_CTRL_SOLUTION	.\CGM_Service_values.h	84;"	d
CGM_SAMPLE_LOC_EARLOB	.\CGM_Service_values.h	83;"	d
CGM_SAMPLE_LOC_FINGER	.\CGM_Service_values.h	81;"	d
CGM_SAMPLE_LOC_SUBCUT_TISSUE	.\CGM_Service_values.h	85;"	d
CGM_SAMPLE_LOC_UNAVAIL	.\CGM_Service_values.h	86;"	d
CGM_SERV_UUID	.\CGM_Service_values.h	5;"	d
CGM_SES_RUN_TIME_UUID	.\CGM_Service_values.h	14;"	d
CGM_SES_START_TIME_UUID	.\CGM_Service_values.h	13;"	d
CGM_SPEC_OPS_CTRL_PT_UUID	.\CGM_Service_values.h	16;"	d
CGM_SPEC_OP_GET_ALERT_HIGH	.\CGM_Service_values.h	187;"	d
CGM_SPEC_OP_GET_ALERT_HYPER	.\CGM_Service_values.h	196;"	d
CGM_SPEC_OP_GET_ALERT_HYPO	.\CGM_Service_values.h	193;"	d
CGM_SPEC_OP_GET_ALERT_LOW	.\CGM_Service_values.h	190;"	d
CGM_SPEC_OP_GET_ALERT_RATE_DECREASE	.\CGM_Service_values.h	199;"	d
CGM_SPEC_OP_GET_ALERT_RATE_INCREASE	.\CGM_Service_values.h	202;"	d
CGM_SPEC_OP_GET_CAL	.\CGM_Service_values.h	184;"	d
CGM_SPEC_OP_GET_INTERVAL	.\CGM_Service_values.h	181;"	d
CGM_SPEC_OP_RESET_ALERT_DEVICE_SPEC	.\CGM_Service_values.h	204;"	d
CGM_SPEC_OP_RESP_ALERT_HIGH	.\CGM_Service_values.h	188;"	d
CGM_SPEC_OP_RESP_ALERT_HYPER	.\CGM_Service_values.h	197;"	d
CGM_SPEC_OP_RESP_ALERT_HYPO	.\CGM_Service_values.h	194;"	d
CGM_SPEC_OP_RESP_ALERT_LOW	.\CGM_Service_values.h	191;"	d
CGM_SPEC_OP_RESP_ALERT_RATE_DECREASE	.\CGM_Service_values.h	200;"	d
CGM_SPEC_OP_RESP_ALERT_RATE_INCREASE	.\CGM_Service_values.h	203;"	d
CGM_SPEC_OP_RESP_CAL	.\CGM_Service_values.h	185;"	d
CGM_SPEC_OP_RESP_CODE	.\CGM_Service_values.h	207;"	d
CGM_SPEC_OP_RESP_INTERVAL	.\CGM_Service_values.h	182;"	d
CGM_SPEC_OP_RESP_OPERAND_INVALID	.\CGM_Service_values.h	212;"	d
CGM_SPEC_OP_RESP_OP_NOT_SUPPORT	.\CGM_Service_values.h	211;"	d
CGM_SPEC_OP_RESP_PARAM_NIR	.\CGM_Service_values.h	214;"	d
CGM_SPEC_OP_RESP_PROCEDURE_NOT_COMPLETE	.\CGM_Service_values.h	213;"	d
CGM_SPEC_OP_RESP_SUCCESS	.\CGM_Service_values.h	210;"	d
CGM_SPEC_OP_SET_ALERT_HIGH	.\CGM_Service_values.h	186;"	d
CGM_SPEC_OP_SET_ALERT_HYPER	.\CGM_Service_values.h	195;"	d
CGM_SPEC_OP_SET_ALERT_HYPO	.\CGM_Service_values.h	192;"	d
CGM_SPEC_OP_SET_ALERT_LOW	.\CGM_Service_values.h	189;"	d
CGM_SPEC_OP_SET_ALERT_RATE_DECREASE	.\CGM_Service_values.h	198;"	d
CGM_SPEC_OP_SET_ALERT_RATE_INCREASE	.\CGM_Service_values.h	201;"	d
CGM_SPEC_OP_SET_CAL	.\CGM_Service_values.h	183;"	d
CGM_SPEC_OP_SET_INTERVAL	.\CGM_Service_values.h	180;"	d
CGM_SPEC_OP_START_SES	.\CGM_Service_values.h	205;"	d
CGM_SPEC_OP_STOP_SES	.\CGM_Service_values.h	206;"	d
CGM_STATUS_ANNUNC_BAT_LOW	.\CGM_Service_values.h	28;"	d
CGM_STATUS_ANNUNC_CAL_TEMP_OCT	.\CGM_Service_values.h	22;"	d
CGM_STATUS_ANNUNC_DEVICE_SPEC_ALERT	.\CGM_Service_values.h	31;"	d
CGM_STATUS_ANNUNC_EXCEEDED_DESC_RATE	.\CGM_Service_values.h	43;"	d
CGM_STATUS_ANNUNC_EXCEEDED_INCR_RATE	.\CGM_Service_values.h	44;"	d
CGM_STATUS_ANNUNC_GNERAL_DEVICE_FAULT	.\CGM_Service_values.h	32;"	d
CGM_STATUS_ANNUNC_HIGH_HYPER	.\CGM_Service_values.h	42;"	d
CGM_STATUS_ANNUNC_HIGH_NIR	.\CGM_Service_values.h	46;"	d
CGM_STATUS_ANNUNC_HIGH_PATIRNT	.\CGM_Service_values.h	40;"	d
CGM_STATUS_ANNUNC_HIGH_TEMP	.\CGM_Service_values.h	37;"	d
CGM_STATUS_ANNUNC_LOW_HYPO	.\CGM_Service_values.h	41;"	d
CGM_STATUS_ANNUNC_LOW_NIR	.\CGM_Service_values.h	45;"	d
CGM_STATUS_ANNUNC_LOW_PATIENT	.\CGM_Service_values.h	39;"	d
CGM_STATUS_ANNUNC_LOW_TEMP	.\CGM_Service_values.h	38;"	d
CGM_STATUS_ANNUNC_NOT_ALLOWED_CAL	.\CGM_Service_values.h	34;"	d
CGM_STATUS_ANNUNC_RECOM_CAL	.\CGM_Service_values.h	35;"	d
CGM_STATUS_ANNUNC_REQ_CAL	.\CGM_Service_values.h	36;"	d
CGM_STATUS_ANNUNC_REQ_TIME_SYNC	.\CGM_Service_values.h	33;"	d
CGM_STATUS_ANNUNC_SENSOR_MALFUNC	.\CGM_Service_values.h	30;"	d
CGM_STATUS_ANNUNC_SES_STOP	.\CGM_Service_values.h	27;"	d
CGM_STATUS_ANNUNC_STATUS_OCT	.\CGM_Service_values.h	23;"	d
CGM_STATUS_ANNUNC_WARNING_OCT	.\CGM_Service_values.h	21;"	d
CGM_STATUS_ANNUNC_WRONG_SENSOR_TYPE	.\CGM_Service_values.h	29;"	d
CGM_STATUS_UUID	.\CGM_Service_values.h	12;"	d
CGM_TREND_INFO_PRES	.\CGM_Service_values.h	19;"	d
CGM_TYPE_ARTERIAL_PLASMA	.\CGM_Service_values.h	74;"	d
CGM_TYPE_ARTERIAL_WHOLE_BLOOD	.\CGM_Service_values.h	73;"	d
CGM_TYPE_CAPILLARY_PLASMA	.\CGM_Service_values.h	70;"	d
CGM_TYPE_CAPILLARY_WHOLE_BLOOD	.\CGM_Service_values.h	69;"	d
CGM_TYPE_CAPILLARY_WHOLE_BLOOD2	.\CGM_Service_values.h	71;"	d
CGM_TYPE_CTRL_SOLUTION	.\CGM_Service_values.h	78;"	d
CGM_TYPE_ISF	.\CGM_Service_values.h	77;"	d
CGM_TYPE_UNDET_PLASMA	.\CGM_Service_values.h	76;"	d
CGM_TYPE_UNDET_WHOLE_BLOOD	.\CGM_Service_values.h	75;"	d
CGM_TYPE_VENOUS_PLASMA	.\CGM_Service_values.h	72;"	d
CTL_PNT_FILTER_TIME_OFFSET	.\CGM_Service_values.h	177;"	d
CTL_PNT_MSG	.\cgm.h	63;"	d
CTL_PNT_OPER_ALL	.\CGM_Service_values.h	158;"	d
CTL_PNT_OPER_FIRST	.\CGM_Service_values.h	162;"	d
CTL_PNT_OPER_GREATER_EQUAL	.\CGM_Service_values.h	160;"	d
CTL_PNT_OPER_LAST	.\CGM_Service_values.h	163;"	d
CTL_PNT_OPER_LESS_EQUAL	.\CGM_Service_values.h	159;"	d
CTL_PNT_OPER_NULL	.\CGM_Service_values.h	157;"	d
CTL_PNT_OPER_RANGE	.\CGM_Service_values.h	161;"	d
CTL_PNT_OP_ABORT	.\CGM_Service_values.h	151;"	d
CTL_PNT_OP_CLR	.\CGM_Service_values.h	150;"	d
CTL_PNT_OP_GET_NUM	.\CGM_Service_values.h	152;"	d
CTL_PNT_OP_NUM_RSP	.\CGM_Service_values.h	153;"	d
CTL_PNT_OP_REQ	.\CGM_Service_values.h	149;"	d
CTL_PNT_OP_REQ_RSP	.\CGM_Service_values.h	154;"	d
CTL_PNT_RSP_ABORT_FAILED	.\CGM_Service_values.h	172;"	d
CTL_PNT_RSP_FILTER_NOT_SUPPORTED	.\CGM_Service_values.h	174;"	d
CTL_PNT_RSP_NO_RECORDS	.\CGM_Service_values.h	171;"	d
CTL_PNT_RSP_OPCODE_NOT_SUPPORTED	.\CGM_Service_values.h	167;"	d
CTL_PNT_RSP_OPERAND_INVALID	.\CGM_Service_values.h	170;"	d
CTL_PNT_RSP_OPER_INVALID	.\CGM_Service_values.h	168;"	d
CTL_PNT_RSP_OPER_NOT_SUPPORTED	.\CGM_Service_values.h	169;"	d
CTL_PNT_RSP_PROC_NOT_CMPL	.\CGM_Service_values.h	173;"	d
CTL_PNT_RSP_SUCCESS	.\CGM_Service_values.h	166;"	d
DEFAULT_BONDING_MODE	.\cgm.c	116;"	d	file:
DEFAULT_DESIRED_CONN_TIMEOUT	.\cgm.c	101;"	d	file:
DEFAULT_DESIRED_MAX_CONN_INTERVAL	.\cgm.c	95;"	d	file:
DEFAULT_DESIRED_MIN_CONN_INTERVAL	.\cgm.c	92;"	d	file:
DEFAULT_DESIRED_SLAVE_LATENCY	.\cgm.c	98;"	d	file:
DEFAULT_ENABLE_UPDATE_REQUEST	.\cgm.c	104;"	d	file:
DEFAULT_ENABLE_UPDATE_REQUEST	.\cgm.c	89;"	d	file:
DEFAULT_FAST_ADV_DURATION	.\cgm.c	80;"	d	file:
DEFAULT_FAST_ADV_INTERVAL	.\cgm.c	77;"	d	file:
DEFAULT_IO_CAPABILITIES	.\cgm.c	119;"	d	file:
DEFAULT_MITM_MODE	.\cgm.c	113;"	d	file:
DEFAULT_NOTI_PERIOD	.\cgm.c	122;"	d	file:
DEFAULT_PAIRING_MODE	.\cgm.c	110;"	d	file:
DEFAULT_PASSCODE	.\cgm.c	107;"	d	file:
DEFAULT_SLOW_ADV_DURATION	.\cgm.c	86;"	d	file:
DEFAULT_SLOW_ADV_INTERVAL	.\cgm.c	83;"	d	file:
DST_DOUBLE_HOUR_DAYLIGHT	.\CGM_Service_values.h	140;"	d
DST_HALF_HOUR_DAYLIGHT	.\CGM_Service_values.h	138;"	d
DST_ONE_HOUR_DAYLIGHT	.\CGM_Service_values.h	139;"	d
DST_STANDARD_TIME	.\CGM_Service_values.h	137;"	d
DST_UNKNOWN	.\CGM_Service_values.h	141;"	d
DYNAMIC_REC_MAX	.\cgm.c	133;"	d	file:
GLUCOSE_H	.\cgm.h	41;"	d
GLUCOSE_MEAS_STATE_ALL	.\cgm.c	127;"	d	file:
GLUCOSE_MEAS_STATE_FILTER_PASS	.\cgm.c	126;"	d	file:
GLUCOSE_MEAS_STATE_VALID	.\cgm.c	125;"	d	file:
HbA1cVal	.\cgm.c	/^  uint16 HbA1cVal;$/;"	m	struct:__anon9	file:
MEAS_IDX_MAX	.\cgm.c	130;"	d	file:
NOTI_TIMEOUT_EVT	.\cgm.h	60;"	d
REC_ACCESS_CTRL_PT_UUID	.\CGM_Service_values.h	15;"	d
START_DEVICE_EVT	.\cgm.h	59;"	d
TIME_ZONE_UNKNOWN	.\CGM_Service_values.h	133;"	d
TIME_ZONE_UTC_M1	.\CGM_Service_values.h	107;"	d
TIME_ZONE_UTC_M10	.\CGM_Service_values.h	95;"	d
TIME_ZONE_UTC_M11	.\CGM_Service_values.h	94;"	d
TIME_ZONE_UTC_M12	.\CGM_Service_values.h	93;"	d
TIME_ZONE_UTC_M2	.\CGM_Service_values.h	106;"	d
TIME_ZONE_UTC_M3	.\CGM_Service_values.h	105;"	d
TIME_ZONE_UTC_M3p5	.\CGM_Service_values.h	104;"	d
TIME_ZONE_UTC_M4	.\CGM_Service_values.h	103;"	d
TIME_ZONE_UTC_M4p5	.\CGM_Service_values.h	102;"	d
TIME_ZONE_UTC_M5	.\CGM_Service_values.h	101;"	d
TIME_ZONE_UTC_M6	.\CGM_Service_values.h	100;"	d
TIME_ZONE_UTC_M7	.\CGM_Service_values.h	99;"	d
TIME_ZONE_UTC_M8	.\CGM_Service_values.h	98;"	d
TIME_ZONE_UTC_M9	.\CGM_Service_values.h	97;"	d
TIME_ZONE_UTC_M9p5	.\CGM_Service_values.h	96;"	d
TIME_ZONE_UTC_P0	.\CGM_Service_values.h	108;"	d
TIME_ZONE_UTC_P1	.\CGM_Service_values.h	109;"	d
TIME_ZONE_UTC_P10	.\CGM_Service_values.h	125;"	d
TIME_ZONE_UTC_P10p5	.\CGM_Service_values.h	126;"	d
TIME_ZONE_UTC_P11	.\CGM_Service_values.h	127;"	d
TIME_ZONE_UTC_P11p5	.\CGM_Service_values.h	128;"	d
TIME_ZONE_UTC_P12	.\CGM_Service_values.h	129;"	d
TIME_ZONE_UTC_P12p75	.\CGM_Service_values.h	130;"	d
TIME_ZONE_UTC_P13	.\CGM_Service_values.h	131;"	d
TIME_ZONE_UTC_P14	.\CGM_Service_values.h	132;"	d
TIME_ZONE_UTC_P2	.\CGM_Service_values.h	110;"	d
TIME_ZONE_UTC_P3	.\CGM_Service_values.h	111;"	d
TIME_ZONE_UTC_P3p5	.\CGM_Service_values.h	112;"	d
TIME_ZONE_UTC_P4	.\CGM_Service_values.h	113;"	d
TIME_ZONE_UTC_P4p5	.\CGM_Service_values.h	114;"	d
TIME_ZONE_UTC_P5	.\CGM_Service_values.h	115;"	d
TIME_ZONE_UTC_P5p5	.\CGM_Service_values.h	116;"	d
TIME_ZONE_UTC_P5p75	.\CGM_Service_values.h	117;"	d
TIME_ZONE_UTC_P6	.\CGM_Service_values.h	118;"	d
TIME_ZONE_UTC_P6p5	.\CGM_Service_values.h	119;"	d
TIME_ZONE_UTC_P7	.\CGM_Service_values.h	120;"	d
TIME_ZONE_UTC_P8	.\CGM_Service_values.h	121;"	d
TIME_ZONE_UTC_P8p75	.\CGM_Service_values.h	122;"	d
TIME_ZONE_UTC_P9	.\CGM_Service_values.h	123;"	d
TIME_ZONE_UTC_P9p5	.\CGM_Service_values.h	124;"	d
TesterHealthVal	.\cgm.c	/^  uint8 TesterHealthVal;$/;"	m	struct:__anon9	file:
UNIT_MASSDENSITY_MG_PER_DL	.\CGM_Service_values.h	223;"	d
UNIT_TIME_MIN	.\CGM_Service_values.h	224;"	d
_CGM_SERVICE_VALUE_H_	.\CGM_Service_values.h	2;"	d
advertData	.\cgm.c	/^static uint8 advertData[] =$/;"	v	file:
annunication	.\cgm.c	/^  uint24        annunication;$/;"	m	struct:__anon2	file:
attDeviceName	.\cgm.c	/^static uint8 attDeviceName[GAP_DEVICE_NAME_LEN] = "CGM Simulator";$/;"	v	file:
baseTime	.\cgm.c	/^  UTCTimeStruct baseTime;$/;"	m	struct:__anon8	file:
carboId	.\cgm.c	/^  uint8 carboId;$/;"	m	struct:__anon9	file:
carboVal	.\cgm.c	/^  uint16 carboVal;$/;"	m	struct:__anon9	file:
cgmBatteryLevel	.\cgm.c	/^static uint8                    cgmBatteryLevel=95;\/\/battery level in percentage$/;"	v	file:
cgmCalibration	.\cgm.c	/^static uint16                   cgmCalibration=0x0222;\/\/the most recent calibration$/;"	v	file:
cgmChangeRate	.\cgm.c	/^static uint16                   cgmChangeRate=0x0777;\/\/the rate of change of glucose$/;"	v	file:
cgmCommInterval	.\cgm.c	/^static uint16                   cgmCommInterval=1000;\/\/the communication interval in ms$/;"	v	file:
cgmCtlPntMsg_t	.\cgm.c	/^} cgmCtlPntMsg_t;$/;"	t	typeref:struct:__anon7	file:
cgmCtlPntResponse	.\cgm.c	/^static void cgmCtlPntResponse(uint8 opcode, uint8 rspcode)$/;"	f	file:
cgmCtlPntRsp	.\cgm.c	/^static attHandleValueInd_t   cgmCtlPntRsp;$/;"	v	file:
cgmCtlPntRsp	.\cgm.c	/^static attHandleValueInd_t cgmCtlPntRsp;$/;"	v	file:
cgmCurrentMeas	.\cgm.c	/^static cgmMeas_t        cgmCurrentMeas;$/;"	v	file:
cgmCurrentTime	.\cgm.c	/^static cgmSessionStartTime_t    cgmStartTime={{20,3,3,8,1,2015},TIME_ZONE_UTC_M5,DST_STANDARD_TIME}; static UTCTimeStruct            cgmCurrentTime;$/;"	v	file:
cgmCurrentTime_UTC	.\cgm.c	/^static UTCTime                  cgmCurrentTime_UTC;     \/\/the UTC format of the current start time$/;"	v	file:
cgmFeature	.\cgm.c	/^  uint24 cgmFeature;$/;"	m	struct:__anon3	file:
cgmFeature	.\cgm.c	/^static cgmFeature_t             cgmFeature={CGM_FEATURE_MULTI_BOND | CGM_FEATURE_E2E_CRC | CGM_FEATURE_CAL, BUILD_UINT8(CGM_TYPE_ISF,CGM_SAMPLE_LOC_SUBCUT_TISSUE)};$/;"	v	file:
cgmFeature_t	.\cgm.c	/^} cgmFeature_t;$/;"	t	typeref:struct:__anon3	file:
cgmHighAlert	.\cgm.c	/^static uint16                   cgmHighAlert=0x0555;\/\/the alert level for patient high condition$/;"	v	file:
cgmHyperAlert	.\cgm.c	/^static uint16                   cgmHyperAlert=0x0444;\/\/the alert level for hypo condition$/;"	v	file:
cgmHypoAlert	.\cgm.c	/^static uint16                   cgmHypoAlert=0x0333;\/\/the alert level for hypo condition$/;"	v	file:
cgmLowAlert	.\cgm.c	/^static uint16                   cgmLowAlert=0x0666;\/\/the alert level for patient low condition$/;"	v	file:
cgmMeasC_t	.\cgm.c	/^} cgmMeasC_t;$/;"	t	typeref:struct:__anon2	file:
cgmMeasDB	.\cgm.c	/^static cgmMeas_t        * cgmMeasDB;$/;"	v	file:
cgmMeasDBCount	.\cgm.c	/^static uint16            cgmMeasDBCount=0;$/;"	v	file:
cgmMeasDBWriteIndex	.\cgm.c	/^static uint16            cgmMeasDBWriteIndex=0; \/\/pointing to the most current glucose record$/;"	v	file:
cgmMeas_t	.\cgm.c	/^} cgmMeas_t;$/;"	t	typeref:struct:__anon1	file:
cgmNewGlucoseMeas	.\cgm.c	/^static void cgmNewGlucoseMeas(cgmMeasC_t * pMeas)$/;"	f	file:
cgmOffsetTime	.\cgm.c	/^static uint16                   cgmOffsetTime;\/\/this can be derived from subtracting start time from current time$/;"	v	file:
cgmQuality	.\cgm.c	/^static uint16                   cgmQuality=0x0999;      \/\/the quality of CGM data$/;"	v	file:
cgmSensorMalfunctionIndicator	.\cgm.c	/^static bool                     cgmSensorMalfunctionIndicator=false;$/;"	v	file:
cgmSensorTemperature	.\cgm.c	/^static uint16                   cgmSensorTemperature=0x888;\/\/the temperature of sensor$/;"	v	file:
cgmSessionRunTime	.\cgm.c	/^static uint16                   cgmSessionRunTime=0x00A8;$/;"	v	file:
cgmSessionStartIndicator	.\cgm.c	/^static bool                     cgmSessionStartIndicator=false;$/;"	v	file:
cgmSessionStartTime_t	.\cgm.c	/^} cgmSessionStartTime_t;$/;"	t	typeref:struct:__anon5	file:
cgmStartTime	.\cgm.c	/^static cgmSessionStartTime_t    cgmStartTime={{20,3,3,8,1,2015},TIME_ZONE_UTC_M5,DST_STANDARD_TIME}; static UTCTimeStruct            cgmCurrentTime;$/;"	v	file:
cgmStatus	.\cgm.c	/^  uint24 cgmStatus;$/;"	m	struct:__anon4	file:
cgmStatus	.\cgm.c	/^static cgmStatus_t              cgmStatus={0x1234,0x567890}; \/\/for testing purpose only$/;"	v	file:
cgmStatus_t	.\cgm.c	/^} cgmStatus_t;$/;"	t	typeref:struct:__anon4	file:
cgmTypeSample	.\cgm.c	/^  uint8  cgmTypeSample;$/;"	m	struct:__anon3	file:
cgmservice_cb	.\cgm.c	/^static void cgmservice_cb(uint8 event, uint8* valueP, uint8 len)$/;"	f	file:
concentration	.\cgm.c	/^  uint16        concentration;$/;"	m	struct:__anon1	file:
concentration	.\cgm.c	/^  uint16        concentration;$/;"	m	struct:__anon2	file:
concentration	.\cgm.c	/^  uint16 concentration;$/;"	m	struct:__anon8	file:
data	.\cgm.c	/^  uint8 data[CGM_CTL_PNT_MAX_SIZE];$/;"	m	struct:__anon7	file:
data	.\cgm.c	/^  uint8 data[GLUCOSE_CTL_PNT_MAX_SIZE];$/;"	m	struct:__anon6	file:
dstOffset	.\cgm.c	/^  uint8         dstOffset;$/;"	m	struct:__anon5	file:
exerciseDuration	.\cgm.c	/^  uint16 exerciseDuration;$/;"	m	struct:__anon9	file:
exerciseIntensity	.\cgm.c	/^  uint8 exerciseIntensity;$/;"	m	struct:__anon9	file:
extendedFlags	.\cgm.c	/^  uint8 extendedFlags;$/;"	m	struct:__anon9	file:
flags	.\cgm.c	/^  uint8         flags;$/;"	m	struct:__anon1	file:
flags	.\cgm.c	/^  uint8         flags;$/;"	m	struct:__anon2	file:
flags	.\cgm.c	/^  uint8 flags;$/;"	m	struct:__anon8	file:
flags	.\cgm.c	/^  uint8 flags;$/;"	m	struct:__anon9	file:
gapConnHandle	.\cgm.c	/^static uint16 gapConnHandle;$/;"	v	file:
gapConnHandle	.\cgm.c	/^uint16 gapConnHandle;$/;"	v
gapProfileState	.\cgm.c	/^static gaprole_States_t gapProfileState = GAPROLE_INIT;$/;"	v	file:
glucoseAdvCancelled	.\cgm.c	/^static bool glucoseAdvCancelled = FALSE;$/;"	v	file:
glucoseBondCB	.\cgm.c	/^static const gapBondCBs_t glucoseBondCB =$/;"	v	file:
glucoseBonded	.\cgm.c	/^static bool glucoseBonded = FALSE;$/;"	v	file:
glucoseBondedAddr	.\cgm.c	/^static uint8 glucoseBondedAddr[B_ADDR_LEN];$/;"	v	file:
glucoseContext	.\cgm.c	/^static attHandleValueNoti_t glucoseContext;$/;"	v	file:
glucoseContextArray	.\cgm.c	/^static glucoseContext_t glucoseContextArray[] =$/;"	v	file:
glucoseContextSend	.\cgm.c	/^static void glucoseContextSend(void)$/;"	f	file:
glucoseContext_t	.\cgm.c	/^} glucoseContext_t;$/;"	t	typeref:struct:__anon9	file:
glucoseCtlPntMsg_t	.\cgm.c	/^} glucoseCtlPntMsg_t;$/;"	t	typeref:struct:__anon6	file:
glucoseCtlPntNumRecordsResponse	.\cgm.c	/^static void glucoseCtlPntNumRecordsResponse(uint16 numRecords)$/;"	f	file:
glucoseCtlPntResponse	.\cgm.c	/^static void glucoseCtlPntResponse(uint8 rspCode, uint8 opcode)$/;"	f	file:
glucoseCtlPntRsp	.\cgm.c	/^static attHandleValueInd_t glucoseCtlPntRsp;$/;"	v	file:
glucoseFilterRecords	.\cgm.c	/^static uint8 glucoseFilterRecords(uint8 oper, uint8 filterType, void* param1, void* param2, bool set, uint8 mask, uint8 opcode)$/;"	f	file:
glucoseFindFirstValidFilteredIndex	.\cgm.c	/^static uint8 glucoseFindFirstValidFilteredIndex(uint8 startIndex)$/;"	f	file:
glucoseFindNumValidRecords	.\cgm.c	/^static uint8 glucoseFindNumValidRecords(void)$/;"	f	file:
glucoseGapStateCB	.\cgm.c	/^static void glucoseGapStateCB( gaprole_States_t newState )$/;"	f	file:
glucoseMarkAllRecords	.\cgm.c	/^static uint8 glucoseMarkAllRecords(bool setBits, uint8 mask)$/;"	f	file:
glucoseMarkAllRecordsEarlierThanSeqNum	.\cgm.c	/^static uint8 glucoseMarkAllRecordsEarlierThanSeqNum(uint16 *pSeqNum, bool set, uint8 mask)$/;"	f	file:
glucoseMarkAllRecordsEarlierThanTime	.\cgm.c	/^static uint8 glucoseMarkAllRecordsEarlierThanTime(UTCTimeStruct* time, bool set, uint8 mask)$/;"	f	file:
glucoseMarkAllRecordsInRangeSeqNum	.\cgm.c	/^static uint8 glucoseMarkAllRecordsInRangeSeqNum(uint16 *pSeqNum1, uint16 *pSeqNum2, bool set, uint8 mask)$/;"	f	file:
glucoseMarkAllRecordsInRangeTime	.\cgm.c	/^static uint8 glucoseMarkAllRecordsInRangeTime(UTCTimeStruct* time1, UTCTimeStruct* time2, bool set, uint8 mask)$/;"	f	file:
glucoseMarkAllRecordsLaterThanSeqNum	.\cgm.c	/^static uint8 glucoseMarkAllRecordsLaterThanSeqNum(uint16 *pSeqNum, bool set, uint8 mask)$/;"	f	file:
glucoseMarkAllRecordsLaterThanTime	.\cgm.c	/^static uint8 glucoseMarkAllRecordsLaterThanTime(UTCTimeStruct* time, bool set, uint8 mask)$/;"	f	file:
glucoseMarkFirstValidRecord	.\cgm.c	/^static uint8 glucoseMarkFirstValidRecord(bool setBits, uint8 mask)$/;"	f	file:
glucoseMarkLastValidRecord	.\cgm.c	/^static uint8 glucoseMarkLastValidRecord(bool setBits, uint8 mask)$/;"	f	file:
glucoseMeas	.\cgm.c	/^static attHandleValueNoti_t  glucoseMeas;$/;"	v	file:
glucoseMeasArray	.\cgm.c	/^static glucoseMeas_t glucoseMeasArray[] =$/;"	v	file:
glucoseMeasIdx	.\cgm.c	/^static uint8 glucoseMeasIdx = 0;$/;"	v	file:
glucoseMeasSend	.\cgm.c	/^static void glucoseMeasSend(void)$/;"	f	file:
glucoseMeas_t	.\cgm.c	/^} glucoseMeas_t;$/;"	t	typeref:struct:__anon8	file:
glucosePairStateCB	.\cgm.c	/^static void glucosePairStateCB( uint16 connHandle, uint8 state, uint8 status )$/;"	f	file:
glucosePasscodeCB	.\cgm.c	/^static void glucosePasscodeCB( uint8 *deviceAddr, uint16 connectionHandle,$/;"	f	file:
glucoseProcessCtlPntMsg	.\cgm.c	/^static void glucoseProcessCtlPntMsg (cgmCtlPntMsg_t * pMsg)$/;"	f	file:
glucoseSendAllRecords	.\cgm.c	/^bool glucoseSendAllRecords = false;$/;"	v
glucoseSendContext	.\cgm.c	/^static bool glucoseSendContext = false;$/;"	v	file:
glucoseSendNext	.\cgm.c	/^static void glucoseSendNext( void )$/;"	f	file:
glucoseTaskId	.\cgm.c	/^uint8 glucoseTaskId;$/;"	v
glucoseVerifyTime	.\cgm.c	/^static uint8 glucoseVerifyTime(UTCTimeStruct* pTime)$/;"	f	file:
glucose_HandleKeys	.\cgm.c	/^static void glucose_HandleKeys( uint8 shift, uint8 keys )$/;"	f	file:
glucose_PeripheralCBs	.\cgm.c	/^static gapRolesCBs_t glucose_PeripheralCBs =$/;"	v	file:
glucose_ProcessOSALMsg	.\cgm.c	/^static void glucose_ProcessOSALMsg( osal_event_hdr_t *pMsg )$/;"	f	file:
hdr	.\cgm.c	/^  osal_event_hdr_t hdr; \/\/!< MSG_EVENT and status$/;"	m	struct:__anon6	file:
hdr	.\cgm.c	/^  osal_event_hdr_t hdr; \/\/!< MSG_EVENT and status$/;"	m	struct:__anon7	file:
len	.\cgm.c	/^  uint8 len;$/;"	m	struct:__anon6	file:
len	.\cgm.c	/^  uint8 len;$/;"	m	struct:__anon7	file:
main	.\Cgm_Main.c	/^int main(void)$/;"	f
mealVal	.\cgm.c	/^  uint8 mealVal;$/;"	m	struct:__anon9	file:
medId	.\cgm.c	/^  uint8 medId;$/;"	m	struct:__anon9	file:
medVal	.\cgm.c	/^  uint16 medVal;$/;"	m	struct:__anon9	file:
osalInitTasks	.\OSAL_Cgm.c	/^void osalInitTasks( void )$/;"	f
quality	.\cgm.c	/^  uint16        quality;$/;"	m	struct:__anon2	file:
scanData	.\cgm.c	/^static uint8 scanData[] =$/;"	v	file:
sensorStatus	.\cgm.c	/^  uint16 sensorStatus;$/;"	m	struct:__anon8	file:
seqNum	.\cgm.c	/^  uint16 seqNum;$/;"	m	struct:__anon8	file:
seqNum	.\cgm.c	/^  uint16 seqNum;$/;"	m	struct:__anon9	file:
seqNum	.\cgm.c	/^static uint16 seqNum = MEAS_IDX_MAX;$/;"	v	file:
size	.\cgm.c	/^  uint8         size;$/;"	m	struct:__anon1	file:
size	.\cgm.c	/^  uint8         size;$/;"	m	struct:__anon2	file:
startTime	.\cgm.c	/^  UTCTimeStruct startTime;$/;"	m	struct:__anon5	file:
state	.\cgm.c	/^  uint8 state;$/;"	m	struct:__anon8	file:
tasksArr	.\OSAL_Cgm.c	/^const pTaskEventHandlerFn tasksArr[] =$/;"	v
tasksCnt	.\OSAL_Cgm.c	/^const uint8 tasksCnt = sizeof( tasksArr ) \/ sizeof( tasksArr[0] );$/;"	v
tasksEvents	.\OSAL_Cgm.c	/^uint16 *tasksEvents;$/;"	v
timeOffset	.\cgm.c	/^  int16 timeOffset;$/;"	m	struct:__anon8	file:
timeOffset	.\cgm.c	/^  uint16 timeOffset;$/;"	m	struct:__anon4	file:
timeZone	.\cgm.c	/^  int8         timeZone;$/;"	m	struct:__anon5	file:
timeoffset	.\cgm.c	/^  uint16        timeoffset;$/;"	m	struct:__anon1	file:
timeoffset	.\cgm.c	/^  uint16        timeoffset;$/;"	m	struct:__anon2	file:
trend	.\cgm.c	/^  uint16        trend;$/;"	m	struct:__anon2	file:
typeSampleLocation	.\cgm.c	/^  uint8 typeSampleLocation;$/;"	m	struct:__anon8	file:
